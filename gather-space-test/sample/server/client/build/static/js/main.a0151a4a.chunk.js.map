{"version":3,"sources":["JoinRoom.js","Chat.js","RoomSetup.js","Room.js","App.js","index.js"],"names":["io","connect","JoinRoom","props","useState","name","setName","room","setRoom","className","id","type","placeholder","onChange","e","target","value","onClick","preventDefault","document","getElementById","history","push","alert","joinRoom","roomID","uuid","createRoom","Chat","socket","messages","setMessages","message","setMessage","sendMessage","a","messageData","sender","time","Date","now","getHours","getMinutes","emit","list","useEffect","on","data","map","RoomSetup","window","location","hostname","StyledVideo","styled","video","Video","ref","useRef","console","log","peer","current","srcObject","streams","playsInline","autoPlay","Room","nearby","setNearby","users","setUsers","userVideo","peersRef","match","params","navigator","mediaDevices","getUserMedia","audio","then","stream","forEach","userID","createPeer","peerID","payload","addPeer","signal","callerID","find","p","peerObj","destroy","peers","filter","tempNearby","userToSignal","Peer","initiator","trickle","incomingSignal","all","me","i","length","proximity","j","user","x","y","enabled","getAudioTracks","muteUnmute","getVideoTracks","cameraOnOff","muted","setup","p5","canvas","createCanvas","parent","tempUsers","draw","background","idx","findIndex","keyIsDown","circle","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a0151a4a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './JoinRoom.css'\nimport { v1 as uuid } from \"uuid\";\nimport io from \"socket.io-client\";\nimport e from \"cors\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction JoinRoom(props) {\n    const [name, setName] = useState(\"\")\n    const [room, setRoom] = useState(\"\")\n  \n    const joinRoom = (e) => {\n      e.preventDefault()\n      if (name === \"\" || room === \"\") {\n        alert(\"Please enter valid values\")\n        return\n      }\n\n      document.getElementById(\"input-name\").value = \"\"\n      document.getElementById(\"input-room\").value = \"\"\n\n      props.history.push(`/room/${room}`);\n    }\n\n    const createRoom = (e) => {\n        e.preventDefault();\n        if (name === \"\") {\n            alert(\"Please enter a name\")\n            return\n        }\n\n        document.getElementById(\"input-name\").value = \"\"\n        document.getElementById(\"input-room\").value = \"\"\n\n        const roomID = uuid();\n        props.history.push(`/room/${roomID}`);\n    }\n\n    return (\n        <div className=\"joinRoom\">\n            <h1> Enter Room Details </h1>\n            <input id=\"input-name\" type=\"text\" placeholder=\"Enter Your Name...\" onChange={ (e) => setName(e.target.value) }/>\n            <input id=\"input-room\" type=\"text\" placeholder=\"Enter Room ID...\" onChange={ (e) => setRoom(e.target.value) }/>\n            <button type=\"submit\" onClick={ (e) => joinRoom(e) }> Join a room </button>\n            <button onClick={ (e) => createRoom(e) }> Create new room </button>\n        </div>\n    );\n};\n\nexport default JoinRoom;","import React, { useState, useEffect } from 'react'\nimport './Chat.css'\nimport ScrollToBottom from 'react-scroll-to-bottom'\n\nfunction Chat({ socket, room, name }) {\n\tconst [messages, setMessages] = useState([])\n\tconst [message, setMessage] = useState(\"\")\n\n\tconst sendMessage = async (e) => {\n\t\te.preventDefault()\n\t\tif (message === \"\") {\n\t\t\talert(\"Please enter a valid message\")\n\t\t\treturn\n\t\t}\n\n\t\tconst messageData = {\n\t\t\troom: room,\n\t\t\tsender: name,\n\t\t\tmessage: message,\n\t\t\ttime: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n\t\t}\n\n\t\tawait socket.emit('send message', messageData)\n\t\tsetMessages((list) => [...list, messageData])\n\t\tsetMessage(\"\");\n\t\tdocument.getElementById('input').value = \"\"\n\t}\n\n  useEffect(() => {\n    socket.on('receive message', (data) => {\n\t\t\tsetMessages((list) => [...list, data])\n    })\n  }, [socket])\n\n\treturn (\n\t\t<div className=\"chatbox\">\n\t\t\t<div className=\"chat\">\n\t\t\t\t<div className=\"chat-header\"> Live Chat </div>\n\t\t\t\t<div className=\"chat-body\">\n\t\t\t\t\t<ScrollToBottom className=\"message-container\">\n\t\t\t\t\t\t{ messages.map((message) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"message\">\n\t\t\t\t\t\t\t\t\t{ message.sender === socket.id ? (\n\t\t\t\t\t\t\t\t\t\t<div className=\"message-sent\"> \n\t\t\t\t\t\t\t\t\t\t\t<div className=\"message-sender\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sender-name\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sender-send\"> { message.sender } </div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text\"> { message.message } </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"time\"> { message.time } </div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<div className=\"message-received\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"message-receiver\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"sender-received\"> { message.sender } </div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content-reciever\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"content-box\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text\"> { message.message } </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"time\"> { message.time } </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ScrollToBottom>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"chat-footer\">\n\t\t\t\t\t<input className=\"message-input\" id=\"input\" type=\"text\" placeholder=\"Type Message Here...\" onChange={ (e) => setMessage(e.target.value) }/>\n\t\t\t\t\t<button className=\"send-message\" onClick={ (e) => sendMessage(e) }> \n\t\t\t\t\t\t&#9658;\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Chat","import React, { useState, useEffect, useRef } from 'react'\nimport './RoomSetup.css'\n\nfunction RoomSetup(props) {\n\tconst [mic, setMic] = useState(true);\n\tconst [cam, setCam] = useState(true);\n\tconst [name, setName] = useState(\"\");\n\tconst videoStream = useRef(null);\n\n\tuseEffect(() => {\n\t\tconst getUserMedia = async () => {\n\t\t\ttry {\n\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\t\t\t\tvideoStream.current.srcObject = stream;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n\t\t}\n\n\t\tgetUserMedia();\n\t}, []);\n\n\tconst muteUnmute = (e) => {\n\t\tif (mic) {\n\t\t\tsetMic(false);\n\t\t\tprops.setMic(false);\n\t\t} else {\n\t\t\tsetMic(true);\n\t\t\tprops.setMic(true);\n\t\t}\n\t\tconst enabled = videoStream.current.srcObject.getAudioTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tvideoStream.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t\t} else {\n\t\t\tvideoStream.current.srcObject.getAudioTracks()[0].enabled = true;\n\t\t}\n\t}\n\n\tconst cameraOnOff = (e) => {\n\t\tif (cam) {\n\t\t\tsetCam(false);\n\t\t\tprops.setCam(false);\n\t\t} else {\n\t\t\tsetCam(true);\n\t\t\tprops.setCam(true);\n\t\t}\n\t\tconst enabled = videoStream.current.srcObject.getVideoTracks()[0].enabled;\n\t\tif (enabled) {\n\t\t\tvideoStream.current.srcObject.getVideoTracks()[0].enabled = false;\n\t\t} else {\n\t\t\tvideoStream.current.srcObject.getVideoTracks()[0].enabled = true;\n\t\t}\n\t}\n\t\n\tconst updateName = (newName) => {\n\t\tsetName(newName);\n\t\tprops.setName(newName);\n\t}\n\n\tconst joinRoom = (e) => {\n\t\tif (name === \"\") {\n\t\t\talert(\"please enter a valid name\");\n\t\t\treturn;\n\t\t}\n\t\tprops.setJoinedRoom(true);\n\t}\n\n\treturn (\n\t\t<div className=\"roomsetup\">\n\t\t\t<button onClick={ (e) => joinRoom(e) } > \n\t\t\t\tJoin\n\t\t\t</button>\n\t\t\t<button onClick={ (e) => muteUnmute(e) }>\n\t\t\t\tmute mic\n\t\t\t</button>\n\t\t\t<button onClick={ (e) => cameraOnOff(e) }>\n\t\t\t\tturn off cam\n\t\t\t</button>\n\t\t\t<input placeholder=\"enter display name\" onChange={ (e) => updateName(e.target.value) }/>\n\t\t\t<video muted ref={ videoStream } autoPlay />\n\t\t</div>\n\t)\n}\n\nexport default RoomSetup","import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./Room.css\";\nimport Sketch from 'react-p5';\nimport styled from \"styled-components\";\nimport Chat from './Chat';\nimport RoomSetup from './RoomSetup';\n\nconst socket = io.connect(window.location.hostname);\n\nconst StyledVideo = styled.video`\n    height: 300px;\n    width: 300px;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n\t\tconsole.log(props.peer);\n\t\tref.current.srcObject = props.peer.streams[0];\n  }, []);\n\n  return (\n  \t<StyledVideo playsInline autoPlay ref={ ref } />\n  );\n}\n\nfunction Room(props) {\nconst [name, setName] = useState(\"\");\nconst [mic, setMic] = useState(true);\nconst [cam, setCam] = useState(true);\nconst [joinedRoom, setJoinedRoom] = useState(false);\n\nconst [nearby, setNearby] = useState([]);\nconst [users, setUsers] = useState([]);\nconst userVideo = useRef();\nconst peersRef = useRef([]);\nconst trackPeers = useRef([]);\nconst roomID = props.match.params.roomID;\n\nuseEffect(() => {\n\tnavigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n\t\tuserVideo.current.srcObject = stream;\n\t\tsocket.emit(\"join room\", roomID);\n\t\tsocket.on(\"all users\", users => {\n\t\t\tusers.forEach(userID => {\n\t\t\t\tconst peer = createPeer(userID, socket.id, stream);\n\t\t\t\tpeersRef.current.push({\n\t\t\t\t\tpeerID: userID,\n\t\t\t\t\tpeer,\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\n\t\tsocket.on(\"user joined\", payload => {\n\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\n\t\t\tpeersRef.current.push({\n\t\t\t\tpeerID: payload.callerID,\n\t\t\t\tpeer,\n\t\t\t})\n\t\t});\n\n\t\tsocket.on(\"receiving returned signal\", payload => {\n\t\t\tconst item = peersRef.current.find(p => p.peerID === payload.id);\n\t\t\titem.peer.signal(payload.signal);\n\t\t});\n\n\t\tsocket.on(\"user left\", id => {\n\t\t\tconst peerObj = peersRef.current.find(p => p.peerID === id);\n\t\t\tif (peerObj) {\n\t\t\t\tpeerObj.peer.destroy();\n\t\t\t}\n\t\t\tconst peers = peersRef.current.filter(p => p.peerID !== id);\n\t\t\tconst tempNearby = nearby.filter(p => p.peerID !== id);\n\t\t\tpeersRef.current = peers;\n\t\t\tsetNearby(tempNearby);\n\t\t})\n\t})\n}, []);\n\nconst createPeer = (userToSignal, callerID, stream) => {\n\tconst peer = new Peer({\n\t\tinitiator: true,\n\t\ttrickle: false,\n\t\tstream,\n\t});\n\n\tpeer.on(\"signal\", signal => {\n\t\tsocket.emit(\"sending signal\", { userToSignal, callerID, signal })\n\t})\n\n\treturn peer;\n}\n\nconst addPeer = (incomingSignal, callerID, stream) => {\n\tconst peer = new Peer({\n\t\tinitiator: false,\n\t\ttrickle: false,\n\t\tstream,\n\t})\n\n\tpeer.on(\"signal\", signal => {\n\t\tsocket.emit(\"returning signal\", { signal, callerID })\n\t})\n\n\tpeer.signal(incomingSignal);\n\n\treturn peer;\n}\n\nuseEffect(() => {\n\tsocket.on('receive move', (data) => {\n\t\tsetUsers(data.all);\n\n\t\tvar me = {};\n\t\tfor (let i = 0; i < data.all.length; i ++) {\n\t\t\tif (data.all[i].id === socket.id) {\n\t\t\t\tme = data.all[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar tempNearby = [];\n\t\tfor (let i = 0; i < data.all.length; i ++) {\n\t\t\tif (data.all[i].id === socket.id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (proximity(data.all[i], me)) {\n\t\t\t\tfor (var j = 0; j < peersRef.current.length; j ++) {\n\t\t\t\t\tif (peersRef.current[j].peerID === data.all[i].id) {\n\t\t\t\t\t\ttempNearby.push(peersRef.current[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetNearby(tempNearby);\n\t})\n}, [socket]);\n\n\nconst muteUnmute = (e) => {\n\tconst enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n\tif (enabled) {\n\t\tuserVideo.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t} else {\n\t\tuserVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n\t}\n}\n\nconst cameraOnOff = (e) => {\n\tconst enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n\tif (enabled) {\n\t\tuserVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n\t} else {\n\t\tuserVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\t}\n}\n\nconst screenShare = (e) => {\n\n}\n\nconst stopScreenShare = () => {\n\n}\n\nconst proximity = (user, me) => {\n\tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nlet setup = (p5, canvas) => {\nlet canv = p5.createCanvas(800, 600).parent(canvas);\nlet tempUsers = [];\ntempUsers.push({\n\tid: socket.id,\n\troom: roomID,\n\tx: 400,\n\ty: 100\n});\n\nsetUsers(tempUsers);\n}\n\nlet draw = (p5) => {\np5.background(\"rgb(255, 255, 255)\");\n\nlet idx = users.findIndex((user) => user.id === socket.id)\nif (idx !== -1) {\n\tlet tempUsers = users;\n\n\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n\t}\n\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n\t}\n\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n\t}\n\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n\t}\t\n\t\n\tsetUsers(tempUsers);\n\tlet data = {\n\t\tid: socket.id,\n\t\troom: roomID,\n\t\tx: tempUsers[idx].x,\n\t\ty: tempUsers[idx].y\t\n\t}\n\tsocket.emit('send move', data);\n}\nfor (let i = 0; i < users.length; i ++) {\n\tp5.circle(users[i].x, users[i].y, 16);\n}\n}\n\nreturn (\n<div className=\"room\">\n\t<div className=\"video-canvas\">\n\t\t<div className=\"buttonbox\">\n\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t\t  <button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t \t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t\t\t<button type=\"button\" className=\"debug\" onClick={ (e) => console.log(peersRef.current) }> Debug </button>\n\t\t</div>\n\t\t<div className=\"videobox\">\n\t\t\t<StyledVideo muted ref={ userVideo } autoPlay playsInline />\n\t\t\t{ nearby.map((peer) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Video peer={ peer.peer } />\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t</div>\n\t<Chat className=\"chat\" socket={ socket } room={ roomID } />\n</div>\n);\n};\n\nexport default Room;\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import io from \"socket.io-client\";\n// import Peer from \"simple-peer\";\n// import \"./Room.css\";\n// import Sketch from 'react-p5';\n// import styled from \"styled-components\";\n// import Chat from \"./Chat\";\n// import RoomSetup from './RoomSetup';\n\n// const socket = io.connect(\"http://localhost:3001\");\n\n// const StyledVideo = styled.video`\n// \theight: 300px;\n// \twidth: 300px;\n// `;\n\n// const Video = (props) => {\n// \tconst ref = useRef();\n\n// \tuseEffect(() => {\n// \t\tref.current.srcObject = props.peer;\n// \t}, []);\n\n// \treturn (\n// \t\t\tprops.muted ? (\n// \t\t\t\t<StyledVideo muted playsInline autoPlay ref={ ref } />\n// \t\t\t) : (\n// \t\t\t\t<StyledVideo playsInline autoPlay ref={ ref } />\n// \t\t\t)\n// \t);\n// }\n\n// function Room(props) {\n// \t\tconst [name, setName] = useState(\"\");\n// \t\tconst [mic, setMic] = useState(true);\n// \t\tconst [cam, setCam] = useState(true);\n// \t\tconst [joinedRoom, setJoinedRoom] = useState(false);\n\t\t\n// \t\tconst [users, setUsers] = useState([]);\n// \t\tconst [peers, setPeers] = useState([]);\n// \t\tconst [connected, setConnected] = useState({});\n// \t\tconst peersRef = useRef([]);\n// \t\tconst myVideo = useRef([]);\n//     const roomID = props.match.params.roomID;\n\n// \t\tuseEffect(() => {\n// \t\t\tconst getUserMedia = async () => {\n// \t\t\t\ttry {\n// \t\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n// \t\t\t\t\tsocket.emit(\"join room\", roomID);\n// \t\t\t\t\tmyVideo.current.srcObject = stream;\n// \t\t\t\t\tif (!cam) {\n// \t\t\t\t\t\tcameraOnOff();\n// \t\t\t\t\t}\n// \t\t\t\t\tif (!mic) {\n// \t\t\t\t\t\tmuteUnmute();\n// \t\t\t\t\t}\n// \t\t\t\t} catch (err) {\n// \t\t\t\t\tconsole.log(err)\n// \t\t\t\t}\n// \t\t\t}\n\n// \t\t\tgetUserMedia().then(stream => {\n// \t\t\t\tsocket.on(\"all users\", users => {\n// \t\t\t\t\tconst peers = [];\n// \t\t\t\t\tusers.forEach(userID => {\n// \t\t\t\t\t\tconst peer = createPeer(userID, socket.id, stream);\n// \t\t\t\t\t\tpeersRef.current.push({\n// \t\t\t\t\t\t\tpeerID: userID,\n// \t\t\t\t\t\t\tpeer,\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\tpeers.push({\n// \t\t\t\t\t\t\tpeerID: userID,\n// \t\t\t\t\t\t\tpeer,\n// \t\t\t\t\t\t});\n// \t\t\t\t\t})\n// \t\t\t\t\tsetPeers(peers);\n// \t\t\t\t})\n\t\n// \t\t\t\tsocket.on(\"user joined\", payload => {\n// \t\t\t\t\tconst peer = addPeer(payload.signal, payload.callerID, stream);\n// \t\t\t\t\tpeersRef.current.push({\n// \t\t\t\t\t\tpeerID: payload.callerID,\n// \t\t\t\t\t\tpeer,\n// \t\t\t\t\t})\n// \t\t\t\t\tconst peerObj = {\n// \t\t\t\t\t\tpeer,\n// \t\t\t\t\t\tpeerID: payload.callerID,\n// \t\t\t\t\t}\n// \t\t\t\t\tsetPeers(users => [...users, peerObj]);\n// \t\t\t\t});\n\t\n// \t\t\t\tsocket.on(\"receiving returned signal\", payload => {\n// \t\t\t\t\tconst item = peersRef.current.find(p => p.peerID === payload.id);\n// \t\t\t\t\titem.peer.signal(payload.signal);\n// \t\t\t\t});\n\t\n// \t\t\t\tsocket.on(\"user left\", id => {\n// \t\t\t\t\tconst peerObj = peersRef.current.find(p => p.peerID === id);\n// \t\t\t\t\tif (peerObj) {\n// \t\t\t\t\t\tpeerObj.peer.destroy();\n// \t\t\t\t\t}\n// \t\t\t\t\tconst peers = peersRef.current.filter(p => p.peerID !== id);\n// \t\t\t\t\tpeersRef.current = peers;\n// \t\t\t\t\tsetPeers(peers);\n// \t\t\t\t})\t\n// \t\t\t});\n// \t\t}, [myVideo.current]);\n\n// \tuseEffect(() => {\n// \t\tsocket.on('receive move', (data) => {\n// \t\t\tsetUsers(data.all);\n// \t\t\tfor (let i = 0; i < data.all.length; i ++) {\n// \t\t\t\tif (data.all[i].id === data.me.id) {\n// \t\t\t\t\tcontinue;\n// \t\t\t\t}\n\n// \t\t\t\tlet closer = proximity(data.all[i], data.me)\n\n// \t\t\t\tif (closer && connected[data.all[i].id] === undefined) {\n// \t\t\t\t\tconnectPeer(data.all[i], data.me);\n\n// \t\t\t\t} else if (!closer && connected[data.all[i].id] !== undefined) {\n// \t\t\t\t\tdisconnectPeer(data.all[i], data.me);\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}, [socket]);\n\n// \tconst createPeer = (userToSignal, callerID, stream) => {\n// \t\tconst peer = new Peer({\n// \t\t\tinitiator: true,\n// \t\t\ttrickle: false,\n// \t\t\tstream\n// \t\t})\n\n// \t\tpeer.on('signal', signal => {\n// \t\t\tsocket.emit('sending signal', { userToSignal, callerID, signal })\n// \t\t})\n\n// \t\treturn peer;\n// \t}\n\n// \tconst addPeer = (incomingSignal, callerID, stream) => {\n// \t\tconst peer = new Peer({\n// \t\t\tinitiator: false, \n// \t\t\ttrickle: false,\n// \t\t\tstream\n// \t\t})\n\n// \t\tpeer.on('signal', signal => {\n// \t\t\tsocket.emit('returning signal', { signal, callerID })\n// \t\t})\n\n// \t\tpeer.signal(incomingSignal);\n// \t\treturn peer;\n// \t}\n\n// \tlet setup = (p5, canvas) => {\n// \t\tlet canv = p5.createCanvas(800, 600).parent(canvas);\n// \t\tlet tempUsers = [];\n// \t\ttempUsers.push({\n// \t\t\tid: socket.id,\n// \t\t\troom: roomID,\n// \t\t\tx: 400,\n// \t\t\ty: 100\n// \t\t});\n\t\t\n// \t\tsetUsers(tempUsers);\n// \t}\n\n// \tlet draw = (p5) => {\n// \t\tp5.background(\"rgb(255, 255, 255)\");\n\n// \t\tlet idx = users.findIndex((user) => user.id === socket.id)\n// \t\tif (idx !== -1) {\n// \t\t\tlet tempUsers = users;\n\n// \t\t\tif (p5.keyIsDown(87) || p5.keyIsDown(38)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(65) || p5.keyIsDown(37)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x - 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(83) || p5.keyIsDown(40)) {\n// \t\t\t\ttempUsers[idx].y = tempUsers[idx].y + 2;\n// \t\t\t}\n// \t\t\tif (p5.keyIsDown(68) || p5.keyIsDown(39)) {\n// \t\t\t\ttempUsers[idx].x = tempUsers[idx].x + 2;\n// \t\t\t}\t\n\t\t\t\n// \t\t\tlet data = {\n// \t\t\t\tid: socket.id,\n// \t\t\t\troom: roomID,\n// \t\t\t\tx: tempUsers[idx].x,\n// \t\t\t\ty: tempUsers[idx].y\t\n// \t\t\t}\n\n// \t\t\tsetUsers(tempUsers);\n// \t\t\tsocket.emit('send move', data);\n// \t\t}\n\n// \t\tfor (let i = 0; i < users.length; i ++) {\n// \t\t\tp5.circle(users[i].x, users[i].y, 16);\n// \t\t}\n// \t}\n\n\t// const muteUnmute = (e) => {\n\t// \tconst enabled = myVideo.current.stcObject.getAudioTracks()[0].enabled;\n\t// \tif (enabled) {\n\t// \t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = false;\t\n\t// \t} else {\n\t// \t\tmyVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n\t// \t}\n\t// }\n\n\t// const cameraOnOff = (e) => {\n\t// \tconst enabled = myVideo.current.srcObject.getVideoTracks()[0].enabled;\n\t// \tif (enabled) {\n\t// \t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n\t// \t} else {\n\t// \t\tmyVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\t// \t}\n\t// }\n\t\n\t// const screenShare = (e) => {\n\n\t// }\n\n\t// const stopScreenShare = () => {\n\n\t// }\n\n\t// const proximity = (user, me) => {\n\t// \tif ((user.x - me.x) * (user.x - me.x) + (user.y - me.y) * (user.y - me.y) <= 10000) {\n\t// \t\treturn true;\n\t// \t} else {\n\t// \t\treturn false;\n\t// \t}\n\t// }\n\n// \tconst connectPeer = (user, me) => {\n\t\t\n\t\t\n// \t\tlet temp = connected;\n// \t\ttemp[user.id] = true;\n// \t\tsetConnected(temp);\n// \t\treturn;\n// \t}\n\n// \tconst disconnectPeer = (user) => {\n\t\t\n\n// \t\tlet temp = connected;\n// \t\tdelete temp[user.id]\n// \t\tsetConnected(temp);\n// \t\treturn;\n// \t}\n\n  // return (\n\t// \t<div>\n\t// \t\t{ joinedRoom ? (\n\t// \t\t\t<div className=\"room\">\n\t// \t\t\t\t<div className=\"video-canvas\">\n\t// \t\t\t\t\t<div className=\"videobox\">\n\t// \t\t\t\t\t\t<div className=\"buttonbox\">\n\t// \t\t\t\t\t\t\t<button type=\"button\" className=\"mute\" onClick={ (e) => muteUnmute(e) }> Mute </button>\n\t// \t\t\t\t\t\t\t<button type=\"button\" className=\"camera\" onClick={ (e) => cameraOnOff(e) }> Camera </button>\n\t// \t\t\t\t\t\t\t<button type=\"button\" className=\"screenshare\" onClick={ (e) => screenShare(e) }> ScreenShare </button>\n\t// \t\t\t\t\t\t</div>\n\t// \t\t\t\t\t\t<StyledVideo muted ref={ myVideo } autoPlay playsInLine />\n\t// \t\t\t\t\t\t<div className=\"videos\">\n\t// \t\t\t\t\t\t\t{ peers.map((peer, idx) => {\n\t// \t\t\t\t\t\t\t\treturn(\n\t// \t\t\t\t\t\t\t\t\t<div>\n\t// \t\t\t\t\t\t\t\t\t\t{ console.log(peer) }\n\t// \t\t\t\t\t\t\t\t\t\t<Video peer={ peer.peer } key={ peer.peerID }/>\n\t// \t\t\t\t\t\t\t\t\t</div>\n\t// \t\t\t\t\t\t\t\t)\n\t// \t\t\t\t\t\t\t})}\n\t// \t\t\t\t\t\t</div>\n\t// \t\t\t\t\t</div>\n\t// \t\t\t\t\t<Sketch setup={ setup } draw={ draw } className=\"canvas\" />\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<Chat className=\"chat\" socket={ socket } room={ roomID } name={ name } />\n\t// \t\t\t</div>\n\t// \t\t\t) : (\n\t// \t\t\t\t<RoomSetup \n\t// \t\t\t\t\tsetJoinedRoom={ () => setJoinedRoom(true) } \n\t// \t\t\t\t\tsetMic={ preference => setMic(preference) } \n\t// \t\t\t\t\tsetCam={ preference => setCam(preference) } \n\t// \t\t\t\t\tsetName={ name => setName(name) }\n\t// \t\t\t\t/>\n\t// \t\t\t)\n\t// \t\t}\n\t// \t</div>\n  // );\n// };\n\n// export default Room;","import './App.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport JoinRoom from \"./JoinRoom\";\nimport Room from './Room';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={ JoinRoom } />\n        <Route path=\"/room/:roomID\" component={ Room } /> \n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}